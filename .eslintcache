[{"C:\\Users\\mehed\\OneDrive\\Desktop\\React\\simple-crud\\src\\index.js":"1","C:\\Users\\mehed\\OneDrive\\Desktop\\React\\simple-crud\\src\\reportWebVitals.js":"2","C:\\Users\\mehed\\OneDrive\\Desktop\\React\\simple-crud\\src\\App.js":"3","C:\\Users\\mehed\\OneDrive\\Desktop\\React\\simple-crud\\src\\Components\\Home.js":"4","C:\\Users\\mehed\\OneDrive\\Desktop\\React\\simple-crud\\src\\Components\\Index.js":"5","C:\\Users\\mehed\\OneDrive\\Desktop\\React\\simple-crud\\src\\Components\\Routes.js":"6","C:\\Users\\mehed\\OneDrive\\Desktop\\React\\simple-crud\\src\\Components\\AllProducts.js":"7"},{"size":500,"mtime":499162500000,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"9"},{"size":331,"mtime":1612127157389,"results":"11","hashOfConfig":"9"},{"size":3681,"mtime":1612124500856,"results":"12","hashOfConfig":"9"},{"size":8822,"mtime":1612179606060,"results":"13","hashOfConfig":"9"},{"size":671,"mtime":1612127047233,"results":"14","hashOfConfig":"9"},{"size":3323,"mtime":1612183992092,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"pq805f",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\mehed\\OneDrive\\Desktop\\React\\simple-crud\\src\\index.js",[],["32","33"],"C:\\Users\\mehed\\OneDrive\\Desktop\\React\\simple-crud\\src\\reportWebVitals.js",[],"C:\\Users\\mehed\\OneDrive\\Desktop\\React\\simple-crud\\src\\App.js",[],"C:\\Users\\mehed\\OneDrive\\Desktop\\React\\simple-crud\\src\\Components\\Home.js",[],"C:\\Users\\mehed\\OneDrive\\Desktop\\React\\simple-crud\\src\\Components\\Index.js",["34"],"import React, { Component } from 'react'\r\n\r\nimport \"./assets/css/bootstrap.min.css\"\r\nimport Card from \"react-bootstrap/Card\"\r\nimport Button from \"react-bootstrap/Button\"\r\nimport Container from \"react-bootstrap/Container\"\r\nimport Row from \"react-bootstrap/Row\"\r\nimport Form from \"react-bootstrap/Form\"\r\nimport Col from \"react-bootstrap/Col\"\r\nimport { Link } from 'react-router-dom';\r\nimport { createBrowserHistory } from \"history\";\r\n\r\nexport default class Index extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            email: null,\r\n            password: null,\r\n            login: false,\r\n            store: null,\r\n            title:null,\r\n            slug:null,\r\n            description:null,\r\n            price:null,\r\n            image:null\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.storeCollector()\r\n    }\r\n    storeCollector(){\r\n        let store = JSON.parse(localStorage.getItem('login'));\r\n\r\n        if (store && store.login){\r\n            this.setState({login:true, store:store})\r\n        }\r\n    }\r\n\r\n    login(){\r\n        fetch('http://127.0.0.1:8000/api/login', {\r\n            method:\"POST\",\r\n            headers: {\r\n                \"Content-type\": \"application/json\",\r\n                \"Accept\": \"application/json\"\r\n            },\r\n            body:JSON.stringify(this.state)\r\n        }).then((response)=>{\r\n            response.json().then((result)=>{\r\n                console.warn('result', result);\r\n                localStorage.setItem('login', JSON.stringify({\r\n                    login: true,\r\n                    store: result.access_token\r\n                }))\r\n                this.storeCollector()\r\n            })\r\n        })\r\n    }\r\n\r\n    productInsert(props){\r\n        let token=\"Bearer \"+this.state.store.store\r\n        console.warn('AUTH_TOKEN', token)\r\n        fetch('http://127.0.0.1:8000/api/create', {\r\n            method:\"POST\",\r\n            headers: {\r\n                \"Authorization\":token,\r\n                \"Content-type\": \"application/json\",\r\n                \"Accept\": \"application/json\"\r\n            },\r\n            body:JSON.stringify(this.state)\r\n        }).then((response)=>{\r\n            response.json().then((product)=>{\r\n                this.setState({response:product.message})\r\n                this.props.history.push(\"/all-products\",  token );\r\n                console.warn('products', product);\r\n            })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container className=\"mt-5\">\r\n            {   !this.state.login ?\r\n                <Row className=\"justify-content-md-center\">\r\n                    <Card style={{ width: '50rem' }}>\r\n                        <Card.Header>Auth User Login</Card.Header>\r\n                        <Card.Body>\r\n                            <Card.Title>Login Form</Card.Title>\r\n                                <Card.Text>\r\n                                    <Form>\r\n                                        <Form.Group as={Row} controlId=\"formPlaintextEmail\">\r\n                                            <Form.Label column sm=\"2\">\r\n                                            Email\r\n                                            </Form.Label>\r\n                                            <Col sm=\"6\">\r\n                                                <Form.Control type=\"email\" onChange={(event) => {this.setState({email:event.target.value})}} placeholder=\"email@example.com\" />\r\n                                            </Col>\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group as={Row} controlId=\"formPlaintextPassword\">\r\n                                            <Form.Label column sm=\"2\">\r\n                                            Password\r\n                                            </Form.Label>\r\n                                            <Col sm=\"6\">\r\n                                                <Form.Control type=\"password\" onChange={(event) => {this.setState({password:event.target.value})}} placeholder=\"Password\" />\r\n                                            </Col>\r\n                                        </Form.Group>\r\n                                        <Button onClick={()=>{this.login()}} variant=\"success\">Login</Button>\r\n                                    </Form>\r\n                                </Card.Text>\r\n                        </Card.Body>\r\n                        <Card.Footer className=\"text-muted\">Welcome To The React</Card.Footer>\r\n                    </Card>\r\n                </Row>\r\n                :\r\n                <Row className=\"justify-content-md-center\">\r\n                    <Card style={{ width: '50rem' }}>\r\n                        <Card.Header>Product Insert<br/>\r\n                        {\r\n                            this.state.response\r\n                        }\r\n                        </Card.Header>\r\n                        <Card.Body>\r\n                                <Card.Text>\r\n                                    <Form>\r\n                                        <Form.Group as={Row} controlId=\"formPlaintextEmail\">\r\n                                            <Form.Label column sm=\"3\">\r\n                                            Title\r\n                                            </Form.Label>\r\n                                            <Col sm=\"6\">\r\n                                                <Form.Control type=\"text\" onChange={(event) => {this.setState({title:event.target.value})}} placeholder=\"Product Titile\" />\r\n                                            </Col>\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group as={Row} controlId=\"formPlaintextEmail\">\r\n                                            <Form.Label column sm=\"3\">\r\n                                            Slug\r\n                                            </Form.Label>\r\n                                            <Col sm=\"6\">\r\n                                                <Form.Control type=\"text\" onChange={(event) => {this.setState({slug:event.target.value})}} placeholder=\"Slug\" />\r\n                                            </Col>\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group as={Row} controlId=\"formPlaintextPassword\">\r\n                                            <Form.Label column sm=\"3\">\r\n                                            Description\r\n                                            </Form.Label>\r\n                                            <Col sm=\"6\">\r\n                                                <Form.Control type=\"text\" onChange={(event) => {this.setState({description:event.target.value})}} placeholder=\"Description\" />\r\n                                            </Col>\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group as={Row} controlId=\"formPlaintextPassword\">\r\n                                            <Form.Label column sm=\"3\">\r\n                                            Price\r\n                                            </Form.Label>\r\n                                            <Col sm=\"6\">\r\n                                                <Form.Control type=\"number\" onChange={(event) => {this.setState({price:event.target.value})}} placeholder=\"Price\" />\r\n                                            </Col>\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group as={Row} controlId=\"formPlaintextPassword\">\r\n                                            <Form.Label column sm=\"3\">\r\n                                            Image\r\n                                            </Form.Label>\r\n                                            <Col sm=\"6\">\r\n                                                <Form.Control type=\"file\" onChange={(event) => {this.setState({image:event.target.value})}} />\r\n                                            </Col>\r\n                                        </Form.Group>\r\n\r\n                                        <Button onClick={()=>{this.productInsert()}} variant=\"success\">Insert</Button>\r\n                                        <Link to=\"/all-products\">\r\n                                            <Button variant=\"info\">\r\n                                                All Products\r\n                                            </Button>\r\n                                        </Link>\r\n                                    </Form>\r\n                                </Card.Text>\r\n                        </Card.Body>\r\n                        <Card.Footer className=\"text-muted\">Welcome To The React</Card.Footer>\r\n                    </Card>\r\n                </Row>\r\n            }\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n","C:\\Users\\mehed\\OneDrive\\Desktop\\React\\simple-crud\\src\\Components\\Routes.js",[],"C:\\Users\\mehed\\OneDrive\\Desktop\\React\\simple-crud\\src\\Components\\AllProducts.js",["35","36"],{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":11,"column":10,"nodeType":"43","messageId":"44","endLine":11,"endColumn":30},{"ruleId":"41","severity":1,"message":"45","line":4,"column":8,"nodeType":"43","messageId":"44","endLine":4,"endColumn":14},{"ruleId":"41","severity":1,"message":"46","line":7,"column":8,"nodeType":"43","messageId":"44","endLine":7,"endColumn":12},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"no-unused-vars","'createBrowserHistory' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'Form' is defined but never used.","no-global-assign","no-unsafe-negation"]